// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserTypes {
  id     String  @id @default(uuid())
  name   String
  price  Decimal
  active Boolean @default(true)
  users  User[]

  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now()) @updatedAt

  @@map("userTypes")
}

model User {
  id          String       @id @default(uuid())
  fullname    String
  email       String
  password    String
  phoneNumber String
  active      Boolean      @default(true)
  restaurants Restaurant[]

  createdAt   DateTime?  @default(now())
  updatedAt   DateTime?  @default(now()) @updatedAt
  UserTypes   UserTypes? @relation(fields: [userTypesId], references: [id])
  userTypesId String?

  @@map("users")
}

model Restaurant {
  id            String   @id @default(uuid())
  corporateName String
  fantasyName   String
  cnpj          String
  phoneNumber   String
  siteName      String
  categories    Category @relation(fields: [categoryId], references: [id])

  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @default(now()) @updatedAt
  categoryId String
  User       User?     @relation(fields: [userId], references: [id])
  userId     String?

  @@map("restaurants")
}

model Category {
  id       String  @id @default(uuid())
  name     String
  products Product @relation(fields: [productId], references: [id])

  createdAt  DateTime?    @default(now())
  updatedAt  DateTime?    @default(now()) @updatedAt
  Restaurant Restaurant[]
  productId  String

  @@map("categories")
}

model Product {
  id          String  @id @default(uuid())
  name        String
  description String
  price       Decimal
  photo       String

  createdAt DateTime?  @default(now())
  updatedAt DateTime?  @default(now()) @updatedAt
  Category  Category[]

  @@map("products")
}
